export function handleStepError({ event, newError, childEnv, mode, api, errorMonitor, deployId, coreStep, netlifyConfig, logs, debug, testOpts, }: {
    event: any;
    newError: any;
    childEnv: any;
    mode: any;
    api: any;
    errorMonitor: any;
    deployId: any;
    coreStep: any;
    netlifyConfig: any;
    logs: any;
    debug: any;
    testOpts: any;
}): Promise<{
    failedPlugin: any[];
    newStatus: {
        state: any;
        title: any;
        summary: any;
        text: string | undefined;
        extraData: any;
    };
}> | Promise<{
    newError: any;
    newStatus: {
        state: any;
        title: any;
        summary: any;
        text: string | undefined;
        extraData: any;
    };
}> | {
    newError: any;
    newStatus: {
        state: any;
        title: any;
        summary: any;
        text: string | undefined;
        extraData: any;
    };
} | {
    newError: any;
};
export function getPluginErrorType(error: any, loadedFrom: any): {
    type?: undefined;
} | {
    type: string;
};
