export function getExpectedVersion({ versions, nodeVersion, packageJson, buildDir, pinnedVersion }: {
    versions: any;
    nodeVersion: any;
    packageJson: any;
    buildDir: any;
    pinnedVersion: any;
}): Promise<{
    version: any;
    compatWarning: string;
}>;
export namespace CONDITIONS {
    namespace nodeVersion {
        export { nodeVersionTest as test };
        export { nodeVersionWarning as warning };
    }
    namespace siteDependencies {
        export { siteDependenciesTest as test };
        export { siteDependenciesWarning as warning };
    }
}
declare function nodeVersionTest(allowedNodeVersion: any, { nodeVersion }: {
    nodeVersion: any;
}): boolean;
declare function nodeVersionWarning(allowedNodeVersion: any): string;
declare function siteDependenciesTest(allowedSiteDependencies: any, { packageJson: { devDependencies, dependencies }, buildDir }: {
    packageJson: {
        devDependencies: any;
        dependencies: any;
    };
    buildDir: any;
}): Promise<any>;
declare function siteDependenciesWarning(allowedSiteDependencies: any): string;
export {};
